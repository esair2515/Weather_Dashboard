ONE================================================================================================================================================================================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Dashboard</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Weather Dashboard</h1>
    </header>
    <main>
        <div class="search-container">
            <input type="text" id="city-input" placeholder="Enter city name">
            <button id="add-favorite">Add to Favorites</button>
        </div>
        <div id="weather-info">
            <div id="loading-spinner" class="spinner"></div>
            <!-- Weather data will be dynamically inserted here -->
        </div>
        <div class="recent-searches">
            <h3>Recent Searches</h3>
            <button id="clear-recent-searches">Clear Recent Searches</button>
            <ul id="recent-searches-list">
                <!-- Recent searches will be dynamically inserted here -->
            </ul>
        </div>
        <div class="favorites">
            <h3>Favorite Cities</h3>
            <ul id="favorites-list">
                <!-- Favorite cities will be dynamically inserted here -->
            </ul>
        </div>
    </main>
    <script src="script.js"></script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background: linear-gradient(to bottom, #4CAF50, #f0f0f0);
    color: #333;
}

header {
    background-color: #4CAF50;
    color: white;
    padding: 1rem;
    text-align: center;
}

.search-container {
    margin: 2rem;
    text-align: center;
}

#city-input {
    padding: 0.5rem;
    width: 80%;
    max-width: 300px;
    border-radius: 5px;
    border: 1px solid #ccc;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

#add-favorite {
    padding: 0.5rem;
    margin-left: 1rem;
    border-radius: 5px;
    border: none;
    background-color: #4CAF50;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

#add-favorite:hover {
    background-color: #45a049;
}

#weather-info {
    margin: 2rem;
    padding: 1rem;
    background-color: white;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: opacity 0.5s ease-in-out, background-color 0.5s ease-in-out;
    opacity: 0;
}

#weather-info.visible {
    opacity: 1;
}

#loading-spinner {
    display: none;
    border: 4px solid #f3f3f3;
    border-radius: 50%;
    border-top: 4px solid #3498db;
    width: 30px;
    height: 30px;
    animation: spin 1s linear infinite;
}

#weather-info img {
    width: 100px;
    height: 100px;
    margin-bottom: 1rem;
}

#weather-info h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
}

#weather-info p {
    font-size: 1.2rem;
    margin: 0.5rem 0;
}

#weather-info .error {
    color: red;
    font-size: 1.2rem;
    font-weight: bold;
}

.recent-searches, .favorites {
    margin: 2rem;
    padding: 1rem;
    background-color: white;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.recent-searches ul, .favorites ul {
    list-style-type: none;
    padding: 0;
}

.recent-searches li, .favorites li {
    padding: 0.5rem;
    border-bottom: 1px solid #ddd;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
}

.recent-searches li:hover, .favorites li:hover {
    background-color: #f0f0f0;
}

#clear-recent-searches {
    margin-top: 1rem;
    padding: 0.5rem;
    background-color: #f44336;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

#clear-recent-searches:hover {
    background-color: #d32f2f;
}

.remove-favorite {
    margin-left: 1rem;
    background-color: #f44336;
    border: none;
    color: white;
    padding: 0.2rem 0.5rem;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.remove-favorite:hover {
    background-color: #d32f2f;
}

@media (max-width: 600px) {
    #city-input {
        width: 90%;
    }

    #weather-info h2 {
        font-size: 1.5rem;
    }

    #weather-info p {
        font-size: 1rem;
    }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
document.addEventListener('DOMContentLoaded', () => {
    loadFavorites();
    loadRecentSearches();
});

document.getElementById('city-input').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        const cityName = e.target.value.trim();

        if (cityName === '') {
            displayError('Please enter a city name.');
        } else {
            showLoadingSpinner();
            setTimeout(() => {
                displayMockWeatherData(cityName);
                addToRecentSearches(cityName);
                saveRecentSearches();
                clearInput();
            }, 1000);  // Simulate API delay
        }
    }
});

document.getElementById('add-favorite').addEventListener('click', function() {
    const cityName = document.getElementById('city-input').value.trim();
    
    if (cityName !== '') {
        addToFavorites(cityName);
        saveFavorites();
        clearInput();
    }
});

document.getElementById('clear-recent-searches').addEventListener('click', function() {
    clearRecentSearches();
});

function displayMockWeatherData(city) {
    const weatherInfoDiv = document.getElementById('weather-info');
    hideLoadingSpinner();

    // Clear previous data
    weatherInfoDiv.innerHTML = '';

    // Mock data
    const mockData = {
        name: city,
        temp: 22,
        description: 'Sunny',
        humidity: 40,
        windSpeed: 10,
        sunrise: '6:00 AM',
        sunset: '8:00 PM',
        icon: 'sunny-icon.png' // Example icon
    };

    // Update background based on weather
    if (mockData.description.toLowerCase() === 'sunny') {
        weatherInfoDiv.style.backgroundColor = '#FFD700'; // Gold
    } else if (mockData.description.toLowerCase() === 'cloudy') {
        weatherInfoDiv.style.backgroundColor = '#C0C0C0'; // Silver
    } else if (mockData.description.toLowerCase() === 'rainy') {
        weatherInfoDiv.style.backgroundColor = '#87CEFA'; // Light Sky Blue
    }

    weatherInfoDiv.innerHTML = `
        <img src="${mockData.icon}" alt="${mockData.description}">
        <h2>${mockData.name}</h2>
        <p>Temperature: ${mockData.temp}Â°C</p>
        <p>Description: ${mockData.description}</p>
        <p>Humidity: ${mockData.humidity}%</p>
        <p>Wind Speed: ${mockData.windSpeed} m/s</p>
        <p>Sunrise: ${mockData.sunrise}</p>
        <p>Sunset: ${mockData.sunset}</p>
    `;

    weatherInfoDiv.classList.add('visible');
}

function displayError(message) {
    const weatherInfoDiv = document.getElementById('weather-info');
    hideLoadingSpinner();
    weatherInfoDiv.innerHTML = `<p class="error">${message}</p>`;
    weatherInfoDiv.classList.add('visible');
}

function showLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.style.display = 'block';
    document.getElementById('weather-info').classList.remove('visible');
}

function hideLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.style.display = 'none';
}

function addToRecentSearches(city) {
    const recentSearchesList = document.getElementById('recent-searches-list');

    // Check if the city is already in the recent searches
    const existingItem = Array.from(recentSearchesList.children).find(li => li.textContent.includes(city));
    if (existingItem) {
        existingItem.remove();
    }

    // Create a new list item
    const listItem = document.createElement('li');
    listItem.textContent = city;

    // Add the list item to the recent searches list
    recentSearchesList.prepend(listItem);
}

function saveRecentSearches() {
    const recentSearchesList = document.getElementById('recent-searches-list');
    const cities = [];

    recentSearchesList.querySelectorAll('li').forEach(li => {
        cities.push(li.textContent);
    });

    localStorage.setItem('recentSearches', JSON.stringify(cities));
}

function loadRecentSearches() {
    const recentSearches = JSON.parse(localStorage.getItem('recentSearches'));
    if (recentSearches) {
        recentSearches.forEach(city => addToRecentSearches(city));
    }
}

function clearRecentSearches() {
    const recentSearchesList = document.getElementById('recent-searches-list');
    recentSearchesList.innerHTML = '';
    localStorage.removeItem('recentSearches');
}

function addToFavorites(city) {
    const favoritesList = document.getElementById('favorites-list');
    
    // Check if the city is already in the favorites
    const existingItem = Array.from(favoritesList.children).find(li => li.textContent.includes(city));
    if (existingItem) {
        return;
    }

    // Create a new list item
    const listItem = document.createElement('li');
    listItem.textContent = city;
    
    // Add remove button
    const removeBtn = document.createElement('button');
    removeBtn.textContent = 'Remove';
    removeBtn.classList.add('remove-favorite');
    removeBtn.addEventListener('click', () => {
        listItem.remove();
        saveFavorites();
    });

    listItem.appendChild(removeBtn);

    // Add the list item to the favorites list
    favoritesList.appendChild(listItem);
}

function saveFavorites() {
    const favoritesList = document.getElementById('favorites-list');
    const cities = [];

    favoritesList.querySelectorAll('li').forEach(li => {
        cities.push(li.textContent.replace('Remove', '').trim());
    });

    localStorage.setItem('favorites', JSON.stringify(cities));
}

function loadFavorites() {
    const favorites = JSON.parse(localStorage.getItem('favorites'));
    if (favorites) {
        favorites.forEach(city => addToFavorites(city));
    }
}

function clearInput() {
    document.getElementById('city-input').value = '';
}

TWO================================================================================================================================================================================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Dashboard</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Weather Dashboard</h1>
        <button id="toggle-temp">Â°C / Â°F</button>
    </header>
    <main>
        <div class="search-container">
            <input type="text" id="city-input" placeholder="Enter city name">
            <button id="add-favorite">Add to Favorites</button>
        </div>
        <div id="weather-info">
            <div id="loading-spinner" class="spinner"></div>
        </div>
        <div class="recent-searches">
            <h3>Recent Searches</h3>
            <button id="clear-recent-searches">Clear Recent Searches</button>
            <ul id="recent-searches-list"></ul>
        </div>
        <div class="favorites">
            <h3>Favorite Cities</h3>
            <ul id="favorites-list"></ul>
        </div>
    </main>
    <script src="script.js"></script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
}

header {
    background-color: #4CAF50;
    color: white;
    padding: 1rem;
    text-align: center;
}

.search-container {
    display: flex;
    justify-content: center;
    margin: 1rem 0;
}

#city-input {
    padding: 0.5rem;
    font-size: 1rem;
    width: 300px;
}

#add-favorite, #toggle-temp, #clear-recent-searches {
    padding: 0.5rem 1rem;
    font-size: 1rem;
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
    margin-left: 0.5rem;
}

#add-favorite:hover, #toggle-temp:hover, #clear-recent-searches:hover {
    background-color: #45a049;
}

#weather-info {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 2rem;
}

#weather-info img {
    width: 100px;
    height: 100px;
}

.recent-searches, .favorites {
    margin: 1rem 2rem;
}

.recent-searches h3, .favorites h3 {
    margin-bottom: 0.5rem;
}

#recent-searches-list, #favorites-list {
    list-style-type: none;
    padding: 0;
}

#recent-searches-list li, #favorites-list li {
    background-color: white;
    padding: 0.5rem;
    margin: 0.5rem 0;
    border-radius: 5px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#recent-searches-list li:hover, #favorites-list li:hover {
    background-color: #f0f0f0;
}

.remove-favorite {
    background-color: #ff4d4d;
    color: white;
    border: none;
    padding: 0.25rem 0.5rem;
    cursor: pointer;
    border-radius: 3px;
}

.remove-favorite:hover {
    background-color: #ff1a1a;
}

.spinner {
    border: 6px solid #f3f3f3;
    border-radius: 50%;
    border-top: 6px solid #4CAF50;
    width: 40px;
    height: 40px;
    -webkit-animation: spin 2s linear infinite;
    animation: spin 2s linear infinite;
    display: none;
}

@-webkit-keyframes spin {
    0% { -webkit-transform: rotate(0deg); }
    100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
let tempUnit = 'C';

document.addEventListener('DOMContentLoaded', () => {
    loadFavorites();
    loadRecentSearches();
});

document.getElementById('toggle-temp').addEventListener('click', function() {
    tempUnit = tempUnit === 'C' ? 'F' : 'C';
    document.getElementById('toggle-temp').textContent = tempUnit === 'C' ? 'Â°C / Â°F' : 'Â°F / Â°C';
    
    const cityName = document.querySelector('#weather-info h2')?.textContent;
    if (cityName) displayMockWeatherData(cityName);
});

document.getElementById('city-input').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        const cityName = e.target.value.trim();

        if (cityName === '') {
            displayError('Please enter a city name.');
        } else {
            showLoadingSpinner();
            setTimeout(() => {
                displayMockWeatherData(cityName);
                addToRecentSearches(cityName);
                saveRecentSearches();
                clearInput();
            }, 1000);
        }
    }
});

document.getElementById('add-favorite').addEventListener('click', function() {
    const cityName = document.getElementById('city-input').value.trim();
    
    if (cityName !== '') {
        addToFavorites(cityName);
        saveFavorites();
        clearInput();
    }
});

document.getElementById('clear-recent-searches').addEventListener('click', function() {
    clearRecentSearches();
});

function displayMockWeatherData(city) {
    const weatherInfoDiv = document.getElementById('weather-info');
    hideLoadingSpinner();

    weatherInfoDiv.innerHTML = '';

    const mockData = {
        name: city,
        temp: tempUnit === 'C' ? 22 : (22 * 9/5) + 32,
        description: 'Sunny',
        humidity: 40,
        windSpeed: 10,
        sunrise: '6:00 AM',
        sunset: '8:00 PM',
        icon: 'sunny-icon.png'
    };

    if (mockData.description.toLowerCase() === 'sunny') {
        weatherInfoDiv.style.backgroundColor = '#FFD700';
    } else if (mockData.description.toLowerCase() === 'cloudy') {
        weatherInfoDiv.style.backgroundColor = '#C0C0C0';
    } else if (mockData.description.toLowerCase() === 'rainy') {
        weatherInfoDiv.style.backgroundColor = '#87CEFA';
    }

    weatherInfoDiv.innerHTML = `
        <img src="${mockData.icon}" alt="${mockData.description}">
        <h2>${mockData.name}</h2>
        <p>Temperature: ${mockData.temp.toFixed(1)}Â°${tempUnit}</p>
        <p>Description: ${mockData.description}</p>
        <p>Humidity: ${mockData.humidity}%</p>
        <p>Wind Speed: ${mockData.windSpeed} m/s</p>
        <p>Sunrise: ${mockData.sunrise}</p>
        <p>Sunset: ${mockData.sunset}</p>
    `;

    weatherInfoDiv.classList.add('visible');
}

function displayError(message) {
    const weatherInfoDiv = document.getElementById('weather-info');
    hideLoadingSpinner();
    weatherInfoDiv.innerHTML = `<p class="error">${message}</p>`;
    weatherInfoDiv.classList.add('visible');
}

function showLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.style.display = 'block';
    document.getElementById('weather-info').classList.remove('visible');
}

function hideLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.style.display = 'none';
}

function addToRecentSearches(city) {
    const recentSearchesList = document.getElementById('recent-searches-list');

    const existingItem = Array.from(recentSearchesList.children).find(li => li.textContent.includes(city));
    if (existingItem) {
        existingItem.remove();
    }

    const listItem = document.createElement('li');
    listItem.textContent = city;

    recentSearchesList.prepend(listItem);
}

function saveRecentSearches() {
    const recentSearchesList = document.getElementById('recent-searches-list');
    const cities = [];

    recentSearchesList.querySelectorAll('li').forEach(li => {
        cities.push(li.textContent);
    });

    localStorage.setItem('recentSearches', JSON.stringify(cities));
}

function loadRecentSearches() {
    const recentSearches = JSON.parse(localStorage.getItem('recentSearches'));
    if (recentSearches) {
        recentSearches.forEach(city => addToRecentSearches(city));
    }
}

function clearRecentSearches() {
    const recentSearchesList = document.getElementById('recent-searches-list');
    recentSearchesList.innerHTML = '';
    localStorage.removeItem('recentSearches');
}

function addToFavorites(city) {
    const favoritesList = document.getElementById('favorites-list');

    const existingItem = Array.from(favoritesList.children).find(li => li.textContent.includes(city));
    if (existingItem) {
        existingItem.remove();
    }

    const listItem = document.createElement('li');
    listItem.textContent = city;

    const removeButton = document.createElement('button');
    removeButton.classList.add('remove-favorite');
    removeButton.textContent = 'Remove';
    removeButton.addEventListener('click', () => {
        listItem.remove();
        saveFavorites();
    });

    listItem.appendChild(removeButton);
    favoritesList.appendChild(listItem);
}

function saveFavorites() {
    const favoritesList = document.getElementById('favorites-list');
    const cities = [];

    favoritesList.querySelectorAll('li').forEach(li => {
        cities.push(li.firstChild.textContent);
    });

    localStorage.setItem('favorites', JSON.stringify(cities));
}

function loadFavorites() {
    const favorites = JSON.parse(localStorage.getItem('favorites'));
    if (favorites) {
        favorites.forEach(city => addToFavorites(city));
    }
}

function clearInput() {
    document.getElementById('city-input').value = '';
}

THREE================================================================================================================================================================================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Dashboard</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Weather Dashboard</h1>
        <button id="toggle-temp">Â°C / Â°F</button>
    </header>
    <main>
        <div class="search-container">
            <input type="text" id="city-input" placeholder="Enter city name">
            <button id="add-favorite">Add to Favorites</button>
        </div>
        <div id="weather-info">
            <div id="loading-spinner" class="spinner"></div>
        </div>
        <div class="recent-searches">
            <h3>Recent Searches</h3>
            <button id="clear-recent-searches">Clear Recent Searches</button>
            <ul id="recent-searches-list"></ul>
        </div>
        <div class="favorites">
            <h3>Favorite Cities</h3>
            <ul id="favorites-list"></ul>
        </div>
    </main>
    <footer>
        <button id="export-data">Export Data</button>
        <button id="import-data">Import Data</button>
        <input type="file" id="import-file" accept=".json" style="display: none;">
    </footer>
    <script src="script.js"></script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
}

header {
    background-color: #4CAF50;
    color: white;
    padding: 1rem;
    text-align: center;
}

.search-container {
    display: flex;
    justify-content: center;
    margin: 1rem 0;
}

#city-input {
    padding: 0.5rem;
    font-size: 1rem;
    width: 300px;
}

#add-favorite, #toggle-temp, #clear-recent-searches, #export-data, #import-data {
    padding: 0.5rem 1rem;
    font-size: 1rem;
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
    margin-left: 0.5rem;
}

#add-favorite:hover, #toggle-temp:hover, #clear-recent-searches:hover, #export-data:hover, #import-data:hover {
    background-color: #45a049;
}

#weather-info {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 2rem;
}

#weather-info img {
    width: 100px;
    height: 100px;
}

.recent-searches, .favorites {
    margin: 1rem 2rem;
}

.recent-searches h3, .favorites h3 {
    margin-bottom: 0.5rem;
}

#recent-searches-list, #favorites-list {
    list-style-type: none;
    padding: 0;
}

#recent-searches-list li, #favorites-list li {
    background-color: white;
    padding: 0.5rem;
    margin: 0.5rem 0;
    border-radius: 5px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#recent-searches-list li:hover, #favorites-list li:hover {
    background-color: #f0f0f0;
}

.remove-favorite {
    background-color: #ff4d4d;
    color: white;
    border: none;
    padding: 0.25rem 0.5rem;
    cursor: pointer;
    border-radius: 3px;
}

.remove-favorite:hover {
    background-color: #ff1a1a;
}

.spinner {
    border: 6px solid #f3f3f3;
    border-radius: 50%;
    border-top: 6px solid #4CAF50;
    width: 40px;
    height: 40px;
    -webkit-animation: spin 2s linear infinite;
    animation: spin 2s linear infinite;
    display: none;
}

@-webkit-keyframes spin {
    0% { -webkit-transform: rotate(0deg); }
    100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

footer {
    margin: 2rem;
    text-align: center;
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
let tempUnit = 'C';

document.addEventListener('DOMContentLoaded', () => {
    loadFavorites();
    loadRecentSearches();
});

document.getElementById('toggle-temp').addEventListener('click', function() {
    tempUnit = tempUnit === 'C' ? 'F' : 'C';
    document.getElementById('toggle-temp').textContent = tempUnit === 'C' ? 'Â°C / Â°F' : 'Â°F / Â°C';
    
    const cityName = document.querySelector('#weather-info h2')?.textContent;
    if (cityName) displayMockWeatherData(cityName);
});

document.getElementById('city-input').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        const cityName = e.target.value.trim();

        if (cityName === '') {
            displayError('Please enter a city name.');
        } else {
            showLoadingSpinner();
            setTimeout(() => {
                displayMockWeatherData(cityName);
                addToRecentSearches(cityName);
                saveRecentSearches();
                clearInput();
            }, 1000);
        }
    }
});

document.getElementById('add-favorite').addEventListener('click', function() {
    const cityName = document.getElementById('city-input').value.trim();
    
    if (cityName !== '') {
        addToFavorites(cityName);
        saveFavorites();
        clearInput();
    }
});

document.getElementById('clear-recent-searches').addEventListener('click', function() {
    clearRecentSearches();
});

document.getElementById('export-data').addEventListener('click', function() {
    exportData();
});

document.getElementById('import-data').addEventListener('click', function() {
    document.getElementById('import-file').click();
});

document.getElementById('import-file').addEventListener('change', function(event) {
    importData(event.target.files[0]);
});

function displayMockWeatherData(city) {
    const weatherInfoDiv = document.getElementById('weather-info');
    hideLoadingSpinner();

    weatherInfoDiv.innerHTML = '';

    const mockData = {
        name: city,
        temp: tempUnit === 'C' ? 22 : (22 * 9/5) + 32,
        description: 'Sunny',
        humidity: 40,
        windSpeed: 10,
        sunrise: '6:00 AM',
        sunset: '8:00 PM',
        icon: 'sunny-icon.png'
    };

    if (mockData.description.toLowerCase() === 'sunny') {
        weatherInfoDiv.style.backgroundColor = '#FFD700';
    } else if (mockData.description.toLowerCase() === 'cloudy') {
        weatherInfoDiv.style.backgroundColor = '#C0C0C0';
    } else if (mockData.description.toLowerCase() === 'rainy') {
        weatherInfoDiv.style.backgroundColor = '#87CEFA';
    }

    weatherInfoDiv.innerHTML = `
        <img src="${mockData.icon}" alt="${mockData.description}">
        <h2>${mockData.name}</h2>
        <p>Temperature: ${mockData.temp.toFixed(1)}Â°${tempUnit}</p>
        <p>Description: ${mockData.description}</p>
        <p>Humidity: ${mockData.humidity}%</p>
        <p>Wind Speed: ${mockData.windSpeed} m/s</p>
        <p>Sunrise: ${mockData.sunrise}</p>
        <p>Sunset: ${mockData.sunset}</p>
    `;

    weatherInfoDiv.classList.add('visible');
}

function displayError(message) {
    const weatherInfoDiv = document.getElementById('weather-info');
    hideLoadingSpinner();
    weatherInfoDiv.innerHTML = `<p class="error">${message}</p>`;
    weatherInfoDiv.classList.add('visible');
}

function showLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.style.display = 'block';
    document.getElementById('weather-info').classList.remove('visible');
}

function hideLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.style.display = 'none';
}

function addToRecentSearches(city) {
    const recentSearchesList = document.getElementById('recent-searches-list');

    const existingItem = Array.from(recentSearchesList.children).find(li => li.textContent.includes(city));
    if (existingItem) {
        existingItem.remove();
    }

    const listItem = document.createElement('li');
    listItem.textContent = city;

    recentSearchesList.prepend(listItem);
}


FOUR================================================================================================================================================================================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Dashboard</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Weather Dashboard</h1>
        <button id="toggle-temp">Â°C / Â°F</button>
    </header>
    <main>
        <div class="search-container">
            <input type="text" id="city-input" placeholder="Enter city name">
            <button id="add-favorite">Add to Favorites</button>
        </div>
        <div id="weather-info">
            <div id="loading-spinner" class="spinner"></div>
        </div>
        <div class="recent-searches">
            <h3>Recent Searches</h3>
            <button id="clear-recent-searches">Clear Recent Searches</button>
            <ul id="recent-searches-list"></ul>
        </div>
        <div class="favorites">
            <h3>Favorite Cities</h3>
            <ul id="favorites-list"></ul>
        </div>
    </main>
    <footer>
        <button id="export-data">Export Data</button>
        <button id="import-data">Import Data</button>
        <input type="file" id="import-file" accept=".json" style="display: none;">
    </footer>
    <script src="script.js"></script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
}

header {
    background-color: #4CAF50;
    color: white;
    padding: 1rem;
    text-align: center;
}

.search-container {
    display: flex;
    justify-content: center;
    margin: 1rem 0;
}

#city-input {
    padding: 0.5rem;
    font-size: 1rem;
    width: 300px;
}

#add-favorite, #toggle-temp, #clear-recent-searches, #export-data, #import-data {
    padding: 0.5rem 1rem;
    font-size: 1rem;
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
    margin-left: 0.5rem;
}

#add-favorite:hover, #toggle-temp:hover, #clear-recent-searches:hover, #export-data:hover, #import-data:hover {
    background-color: #45a049;
}

#weather-info {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 2rem;
}

#weather-info img {
    width: 100px;
    height: 100px;
}

.recent-searches, .favorites {
    margin: 1rem 2rem;
}

.recent-searches h3, .favorites h3 {
    margin-bottom: 0.5rem;
}

#recent-searches-list, #favorites-list {
    list-style-type: none;
    padding: 0;
}

#recent-searches-list li, #favorites-list li {
    background-color: white;
    padding: 0.5rem;
    margin: 0.5rem 0;
    border-radius: 5px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#recent-searches-list li:hover, #favorites-list li:hover {
    background-color: #f0f0f0;
}

.remove-favorite {
    background-color: #ff4d4d;
    color: white;
    border: none;
    padding: 0.25rem 0.5rem;
    cursor: pointer;
    border-radius: 3px;
}

.remove-favorite:hover {
    background-color: #ff1a1a;
}

.spinner {
    border: 6px solid #f3f3f3;
    border-radius: 50%;
    border-top: 6px solid #4CAF50;
    width: 40px;
    height: 40px;
    -webkit-animation: spin 2s linear infinite;
    animation: spin 2s linear infinite;
    display: none;
}

@-webkit-keyframes spin {
    0% { -webkit-transform: rotate(0deg); }
    100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

footer {
    margin: 2rem;
    text-align: center;
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
let tempUnit = 'C';

document.addEventListener('DOMContentLoaded', () => {
    loadFavorites();
    loadRecentSearches();
});

document.getElementById('toggle-temp').addEventListener('click', function() {
    tempUnit = tempUnit === 'C' ? 'F' : 'C';
    document.getElementById('toggle-temp').textContent = tempUnit === 'C' ? 'Â°C / Â°F' : 'Â°F / Â°C';
    
    const cityName = document.querySelector('#weather-info h2')?.textContent;
    if (cityName) displayMockWeatherData(cityName);
});

document.getElementById('city-input').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        const cityName = e.target.value.trim();

        if (cityName === '') {
            displayError('Please enter a city name.');
        } else {
            showLoadingSpinner();
            setTimeout(() => {
                displayMockWeatherData(cityName);
                addToRecentSearches(cityName);
                saveRecentSearches();
                clearInput();
            }, 1000);
        }
    }
});

document.getElementById('add-favorite').addEventListener('click', function() {
    const cityName = document.getElementById('city-input').value.trim();
    
    if (cityName !== '') {
        addToFavorites(cityName);
        saveFavorites();
        clearInput();
    }
});

document.getElementById('clear-recent-searches').addEventListener('click', function() {
    clearRecentSearches();
});

document.getElementById('export-data').addEventListener('click', function() {
    exportData();
});

document.getElementById('import-data').addEventListener('click', function() {
    document.getElementById('import-file').click();
});

document.getElementById('import-file').addEventListener('change', function(event) {
    importData(event.target.files[0]);
});

function displayMockWeatherData(city) {
    const weatherInfoDiv = document.getElementById('weather-info');
    hideLoadingSpinner();

    weatherInfoDiv.innerHTML = '';

    const mockData = {
        name: city,
        temp: tempUnit === 'C' ? 22 : (22 * 9/5) + 32,
        description: 'Sunny',
        humidity: 40,
        windSpeed: 10,
        sunrise: '6:00 AM',
        sunset: '8:00 PM',
        icon: 'sunny-icon.png'
    };

    if (mockData.description.toLowerCase() === 'sunny') {
        weatherInfoDiv.style.backgroundColor = '#FFD700';
    } else if (mockData.description.toLowerCase() === 'cloudy') {
        weatherInfoDiv.style.backgroundColor = '#C0C0C0';
    } else if (mockData.description.toLowerCase() === 'rainy') {
        weatherInfoDiv.style.backgroundColor = '#87CEFA';
    }

    weatherInfoDiv.innerHTML = `
        <img src="${mockData.icon}" alt="${mockData.description}">
        <h2>${mockData.name}</h2>
        <p>Temperature: ${mockData.temp.toFixed(1)}Â°${tempUnit}</p>
        <p>Description: ${mockData.description}</p>
        <p>Humidity: ${mockData.humidity}%</p>
        <p>Wind Speed: ${mockData.windSpeed} m/s</p>
        <p>Sunrise: ${mockData.sunrise}</p>
        <p>Sunset: ${mockData.sunset}</p>
    `;

    weatherInfoDiv.classList.add('visible');
}

function displayError(message) {
    const weatherInfoDiv = document.getElementById('weather-info');
    hideLoadingSpinner();
    weatherInfoDiv.innerHTML = `<p class="error">${message}</p>`;
    weatherInfoDiv.classList.add('visible');
}

function showLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.style.display = 'block';
    document.getElementById('weather-info').classList.remove('visible');
}

function hideLoadingSpinner() {
    const spinner = document.getElementById('loading-spinner');
    spinner.style.display = 'none';
}

function addToRecentSearches(city) {
    const recentSearchesList = document.getElementById('recent-searches-list');

    const existingItem = Array.from(recentSearchesList.children).find(li => li.textContent.includes(city));
    if (existingItem) {
        existingItem.remove();
    }

    const listItem = document.createElement('li');
    listItem.textContent = city;

    recentSearchesList.prepend(listItem);
    if (recentSearchesList.children.length > 5) {
        recentSearchesList.removeChild(recentSearchesList.lastChild);
    }
}

function saveRecentSearches() {
    const recentSearchesList = document.getElementById('recent-searches-list');
    const cities = [];

    recentSearchesList.querySelectorAll('li').forEach(li => {
        cities.push(li.textContent);
    });

    localStorage.setItem('recentSearches', JSON.stringify(cities));
}

function loadRecentSearches() {
    const recentSearches = JSON.parse(localStorage.getItem('recentSearches'));
    if (recentSearches) {
        recentSearches.forEach(city => addToRecentSearches(city));
    }
}

function clearRecentSearches() {
    const recentSearchesList = document.getElementById('recent-searches-list');
    recentSearchesList.innerHTML = '';
    localStorage.removeItem('recentSearches');
}

function addToFavorites(city) {
    const favoritesList = document.getElementById('favorites-list');

    const existingItem = Array.from(favoritesList.children).find(li => li.textContent.includes(city));
    if (existingItem) {
        existingItem.remove();
    }

    const listItem = document.createElement('li');
    listItem.textContent = city;

    const removeButton = document.createElement('button');
    removeButton.classList.add('remove-favorite');
    removeButton.textContent = 'Remove';
    removeButton.addEventListener('click', () => {
        listItem.remove();
        saveFavorites();
    });

    listItem.appendChild(removeButton);
    favoritesList.appendChild(listItem);
}

function saveFavorites() {
    const favoritesList = document.getElementById('favorites-list');
    const cities = [];

    favoritesList.querySelectorAll('li').forEach(li => {
        cities.push(li.firstChild.textContent);
    });

    localStorage.setItem('favorites', JSON.stringify(cities));
}

function loadFavorites() {
    const favorites = JSON.parse(localStorage.getItem('favorites'));
    if (favorites) {
        favorites.forEach(city => addToFavorites(city));
    }
}

function clearInput() {
    document.getElementById('city-input').value = '';
}

function exportData() {
    const recentSearches = JSON.parse(localStorage.getItem('recentSearches')) || [];
    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];
    
    const data = {
        recentSearches,
        favorites
    };

    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);

    const a = document.createElement('a');
    a.href = url;
    a.download = 'weather-dashboard-data.json';
    a.click();

    URL.revokeObjectURL(url);
}

function importData(file) {
    const reader = new FileReader();

    reader.onload = function(event) {
        try {
            const data = JSON.parse(event.target.result);

            if (data.recentSearches) {
                localStorage.setItem('recentSearches', JSON.stringify(data.recentSearches));
                loadRecentSearches();
            }

            if (data.favorites) {
                localStorage.setItem('favorites', JSON.stringify(data.favorites));
                loadFavorites();
            }
        } catch (error) {
            alert('Failed to import data. Please ensure the file is valid.');
        }
    };

    reader.readAsText(file);
}
